Question A: //What are your git config commands?
deniz@denizs-air ~ % git config --global user.name "denizzistoglu"
deniz@denizs-air ~ % git config --global user.email "denizzistoglu04@hotmail.com"
deniz@denizs-air ~ % git config --global core. editor "nano" 
deniz@denizs-air ~ % git config --list

Question B: //What files or directories are in your local .git directory?
//first how to clone the project:
//deniz@Denizs-MacBook-Air ~ % git clone https://github.com/denizzistoglu/project4-q2.git
//Cloning into 'project4-q2'...
//remote: Enumerating objects: 13, done.
//remote: Counting objects: 100% (13/13), done.
//remote: Compressing objects: 100% (6/6), done.
//remote: Total 13 (delta 0), reused 0 (delta 0), pack-reused 0
//Unpacking objects: 100% (13/13), done. 
//
deniz@Denizs-MacBook-Air ~ % git status
On branch master
No commits yet
Untracked files:
  (use "git add <file>..." to include in what will be committed)
nothing added to commit but untracked files present (use "git add" to track)

deniz@Denizs-MacBook-Air ~ % ls
Applications		Downloads		Music			Public			project4-q2
Desktop			Library			NetBeansProjects	denizzistoglu.
Documents		Movies			Pictures		denizzistoglu.git

Question C: //Using markdown, how would you put a clickable link to your README.md to the web page of The Department of Software Engineering of Işık University

Here is the web page of The Department of Software Engineering of Işık University: [Işık University Software Engineering Web Page](https://www.isikun.edu.tr/akademik/muhendislik-fakultesi/bolumler-ve-programlar/bilgisayar-muhendisligi/programlar/lisans-programi/yazilim-muhendisligi ).

Question D: //What rules are in your .gitignore?
deniz@Denizs-MacBook-Air ~ % touch .gitignore
deniz@Denizs-MacBook-Air ~ % *.log //ignore all the files that have .log extension.
deniz@Denizs-MacBook-Air ~ % temp //ignore all the files in the directory named temp. 

Question F: 
//first how to create a branch feature-1:
//deniz@Denizs-MacBook-Air ~ % git branch feature-1
//how to commit file: 
// git add .Hw4code.java
// git commit -m "Add existing file"
// git push origin feature-1
//What are all the commits you’ve made on the feature-1 branch?
Create homework4
Update homework4
Create README
Update README
Commit file Hw4code.java

//What files (and sub-directories, if any) are listed in your hmk1 directory on the feature-1 branch?
feature-1
   hwk4
      Hw4code.java
      homework4.txt
   README.md
//What files (and sub-directories if any) are listed in your hmk4 directory on the main branch?
main
   hwk4
      homework4.txt
   README.md
Question J:
//first to merge feature-1 and main:
//git checkout feature-1
//git pull origin main 
//git merge feature-1

//What are all the commits you’ve made on the feature-2 branch?
//first how to create a branch feature-1:
//deniz@Denizs-MacBook-Air ~ % git branch feature-1 

Create homework4
Update homework4 
Create README
Update README
Commit file Hw4code.java
update Hw4code.java

Question M://What are the differences between the main and the other three branches? Hint: use git diff.

